use std::env;
use std::fs::File;
use std::io::{self, BufRead, Write};

fn countFruits(house_start: i32, house_end: i32, apple_tree: i32, orange_tree: i32, apples: Vec<i32>, oranges: Vec<i32>) -> (i32, i32) {
    let apples_on_house = apples.iter()
        .filter(|&&distance| {
            let position = apple_tree + distance;
            position >= house_start && position <= house_end
        })
        .count() as i32;

    let oranges_on_house = oranges.iter()
        .filter(|&&distance| {
            let position = orange_tree + distance;
            position >= house_start && position <= house_end
        })
        .count() as i32;

    (apples_on_house, oranges_on_house)
}

fn main() {
    let stdin = io::stdin();
    let mut stdin_iterator = stdin.lock().lines();

    let first_line: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();
    
    let house_start = first_line[0];
    let house_end = first_line[1];

    let second_line: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();
    
    let apple_tree = second_line[0];
    let orange_tree = second_line[1];

    let third_line: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();
    
    let m = third_line[0]; // number of apples
    let n = third_line[1]; // number of oranges

    let apples: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();

    let oranges: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();

    let (apples_count, oranges_count) = countFruits(house_start, house_end, apple_tree, orange_tree, apples, oranges);

    let mut fptr = File::create(env::var("OUTPUT_PATH").unwrap()).unwrap();
    writeln!(&mut fptr, "{}", apples_count).ok();
    writeln!(&mut fptr, "{}", oranges_count).ok();
}
