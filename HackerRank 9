use std::env;
use std::fs::File;
use std::io::{self, BufRead, Write};

fn time_conversion(s: &str) -> String {
    let (time, period) = s.split_at(s.len() - 2);
    let mut parts: Vec<&str> = time.split(':').collect();
    let hour: i32 = parts[0].parse().unwrap();

    if period == "AM" {
        if hour == 12 {
            parts[0] = "00";
        }
    } else if period == "PM" {
        if hour != 12 {
            parts[0] = &(hour + 12).to_string();
        }
    }

    format!("{}:{}:{}", parts[0], parts[1], parts[2])
}

fn main() {
    let stdin = io::stdin();
    let mut stdin_iterator = stdin.lock().lines();

    let mut fptr = File::create(env::var("OUTPUT_PATH").unwrap()).unwrap();

    let s = stdin_iterator.next().unwrap().unwrap().trim().to_string();

    let result = time_conversion(&s);

    writeln!(&mut fptr, "{}", result).unwrap();
}
